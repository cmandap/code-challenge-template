# Generated by Django 4.1.6 on 2023-02-10 05:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CropYieldRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(unique=True, verbose_name='Record Generated Corresponding Year')),
                ('total_yield', models.PositiveIntegerField(verbose_name='Total Yield per Year')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Application Record Created Date')),
                ('create_by', models.CharField(max_length=200, verbose_name='Application Record Create Event')),
                ('update_timestamp', models.DateTimeField(auto_now=True, verbose_name='Application Record Updated Date')),
                ('update_by', models.CharField(max_length=200, verbose_name='Application Record Update Event')),
            ],
            options={
                'db_table': 'crop_yield_record',
            },
        ),
        migrations.CreateModel(
            name='WeatherStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_id', models.CharField(max_length=200, unique=True, verbose_name='Real World Station Reference')),
                ('station_name', models.CharField(max_length=200, unique=True, verbose_name='Real World Station Name')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Application Record Created Date')),
                ('create_by', models.CharField(max_length=200, verbose_name='Application Record Create Event')),
                ('update_timestamp', models.DateTimeField(auto_now=True, verbose_name='Application Record Updated Date')),
                ('update_by', models.CharField(max_length=200, verbose_name='Application Record Update Event')),
            ],
            options={
                'db_table': 'weather_station',
            },
        ),
        migrations.CreateModel(
            name='WeatherStationStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Station Stats Corresponding Year')),
                ('avg_max_temp', models.FloatField(null=True, verbose_name='Avergae Maximum Temperature per Year')),
                ('avg_min_temp', models.FloatField(null=True, verbose_name='Average Minimum Temperature per Year')),
                ('total_precipitation', models.FloatField(null=True, verbose_name='Total Precipitation per Year')),
                ('weather_station_id', models.ForeignKey(db_column='weather_station_id', on_delete=django.db.models.deletion.CASCADE, to='weather_crop_info.weatherstation', verbose_name='Application Generated Station Reference')),
            ],
            options={
                'db_table': 'weather_station_stats',
            },
        ),
        migrations.CreateModel(
            name='WeatherRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Weather Record Generated Date')),
                ('min_temp', models.FloatField(null=True, verbose_name='Minimum Temperature')),
                ('max_temp', models.FloatField(null=True, verbose_name='Maximum Temperature')),
                ('precipitation', models.FloatField(null=True, verbose_name='Precipitation Level')),
                ('create_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Application Record Created Date')),
                ('create_by', models.CharField(max_length=200, verbose_name='Application Record Create Event')),
                ('update_timestamp', models.DateTimeField(auto_now=True, verbose_name='Application Record Updated Date')),
                ('update_by', models.CharField(max_length=200, verbose_name='Application Record Update Event')),
                ('weather_station_id', models.ForeignKey(db_column='weather_station_id', on_delete=django.db.models.deletion.CASCADE, to='weather_crop_info.weatherstation', verbose_name='Application Generated Station Reference')),
            ],
            options={
                'db_table': 'weather_record',
            },
        ),
        migrations.AddConstraint(
            model_name='weatherstationstats',
            constraint=models.UniqueConstraint(fields=('weather_station_id', 'year'), name='unique_station_year_constraint'),
        ),
        migrations.AddConstraint(
            model_name='weatherrecord',
            constraint=models.UniqueConstraint(fields=('weather_station_id', 'date'), name='unique_station_date_constraint'),
        ),
    ]
